Web of Trust Version 0.4.4 build0019
------------------------------------------------------------------------

SUMMARY AND OUTLOOK (detailed changelog is below):

As the previous build was mostly new code to improve performance, the
main focus of this release shall be bugfixes and unit tests.
Alternating between new code and maintenance hopefully guarantees the
quality of the codebase to flourish.
To not give you a boring release without apparent changes, the build
also ships improvements of the user interface; and an optimization of
startup time.
For developers, there is a special goodie available: I have released
my bachelor's thesis about last year's WoT performance work.
The thesis contains a large introduction which explains how WoT works.
As it is intended for an audience with no prior Freenet-related
knowledge, it shall be considered as the WoT core developer's manual.
There are also open algorithmic questions outlined in the thesis
- so if you want to do some computer science, please have a look at it,
feedback is welcome.

FIXME: Summarize the actual changes which have been outlined above.


Outlook for the next build: The missing piece in the "first round" of
the most promising performance improvements is planned to ship in the
next build:
Currently, WoT creates an USK subscription for all of the known
identities, which amounts to over 14 000. This puts very heavy load on a
typical Freenet node.
The fix will address this by only subscribing to the identities which
the user has assigned trust to. The other identities will only be
fetched "on-demand" when WoT learns by gossip that they surely have
published a new edition.
For details of the planned algorithm, see [1].

Work on this shall being immediately, but it may take some months as
I've been volunteer since December and thus cannot provide as much time
as an employee anymore.
This is because Freenet has run out of funds. I am currently not seeking
a different job at the hope of being able to acquire funding for Freenet
so I can resume work. This can continue for some months, as my family
needs some help from me anyway and I get food in return, but I cannot
live off my family's gratitude forever.
So if you want to help the project, please consider donating:
    https://freenetproject.org/
Scroll down to see the fundraising progress bar.
Bitcoin is also accepted in case you want to stay semi-anonymous!


HOW TO INSTALL:

While this release has not yet been bundled with a new Freenet
release, it can be acquired a lot easier than previous non-bundled
ones:
1) Unload the "WebOfTrust" plugin and load the "WebOfTrust Testing
   Versions" plugin. Please do first read the description for the
   security implications!
   WARNING: When sending data to the network, WoT will include which
   version you are using. Thus, if you are a very early tester, it may
   become easier for attackers to correlate which identities belong to
   you, as there may be very few people using the new release.
2) If you had already done step 1 previously, i.e. are already running
   a previous testing release, you need to restart Freenet or unload
   and re-load the plugin for getting the update: Freenet will only
   check for updates of the testing version when the plugin is
   restarted.
You will also get this release someday even if you do not switch to the
testing versions. It will just take longer: Non-testing releases are
shipped together with regular Freenet releases; and Freenet releases do
not happen as often as WoT releases.
So once Freenet build 1473 is released, no action will be needed
anymore, your node will update WoT automatically.


CHANGELOG - prefixed with the bugtracker issue number:

- 0000001: title_of_issue_1.............................................
           more_lines_of_title..........................................

  Blah.
  Blah.

- 0000002: .............................................................
           .............................................................
  0000003: .............................................................
           .............................................................
  
  Blah.
  Blah.

- 0006653: [Bugs] IdentityFileProcessor can get triggered during early
           startup, slows it down (xor)

  The previous build's changelog promised an improved startup time of
  WoT of 2 minutes.
  Unfortunately, in practice, a bug could cause this to become over 20
  minutes.

  This bug has been fixed, and startup times of 2 minutes should in fact
  be possible now.

  This is of course still too much. The next build's work shall reduce
  this to almost zero startup time.
  See https://bugs.freenetproject.org/view.php?id=3816

- 0006663: [Performance] Enforce maximum numer of trust values when
           importing trust lists (xor)

  When WoT uploads trust lists to the network, there is a limit of 512
  trust values. If you set more trust values than 512, only 512 of them
  will be exported.

  Unfortunately, this limit was not enforced when importing trust lists
  which were downloaded from the network. Thus, a malicious user could
  upload trust lists with much more trust values to conduct a denial of
  service attack on the network.
  Luckily, this was not a real security issue, since there was still
  an indirect limit:
  The file size of trust lists was properly limited to 1 MB.
  Still, a lot of trust values can fit in 1 MB, which is why this caused
  noticeable performance issues.

  This build fixes import to ignore trust lists with more than 512
  entries.
  This could have an impact on 3rd party clients such as LCWoT: If they
  only ever produce trust lists that large, their identities will be
  ignored by WoT.
  Thus, if you're an author of a 3rd party client, please fix it to
  limit the amount of exported trust values to 512.

- 0006648: [Performance] StatisticsPage: Add statistics to monitor worst case runtime of new distrust computation (xor)
- 0006615: [Security] TheSeeker's machines are compromised. Maybe write code to remove Trust to his old seed (xor)
- 0006722: [Security] FIXME
- 0006817: [Bugs] Fix Norwegian Bokmål and Portuguese (Brazil) translations to work (xor)
- 0006816: [Usability] Update translations from Transifex, add new ones (xor)
- 0006569: [Usability] L10n: Backport improvements at German l10n to English (xor)
- 0006570: [Usability] L10n: Instead of "Trust" / "Score", use "Trust" and "Computed trust" (xor)
- 0006214: [Usability] L10n: Get rid of technical terms "Insert / Request URI" (xor)
- 0006568: [Usability] L10n: Instead of "contexts", use "services" (xor)
- 0006565: [Usability] Statistics page l10n: "Average time for full score re-computation" string lacks unit (seconds) (xor)
- 0004901: [Usability] L10n: Fix glitches (xor)
- 0006409: [Usability] L10n: when logged in the option “Create new Identity” seems strange. (xor)
- 0006818: [Usability] Process issues on Transifex (xor)
- 0006812: [Features] wotutil.sh: Allow usage of FCP API (xor)
- 0006651: [Bugs] "wotutil.sh -testAndRepair" says "Database OK!" if the database file did not exist, should fail (xor)
- 0006640: [Bugs] KnownIdentitiesPage: IndexOutOfBoundsException when
           searching (xor)

  On the 'Other people's identities' page, the search function could
  cause an error due to an IndexOutOfBoundsException.
  This has been fixed.

- 0006596: [Bugs] Add workaround for db4o bug (xor)


CHANGELOG about stuff only interesting for developers:

- 0000004: .............................................................
           .............................................................
  
  Blah.
  Blah.

- 0006840: [Code quality] Provide xor's WoT bachelor thesis as a developer's manual (xor)
- 0006815: [Code quality] l10n: Add config for Transifex command line
           tool "tx" (xor)

  Translations nowadays are being managed on a collaborative website:
  https://www.transifex.com/

  They offer a command line tool called "tx" for downloading and
  uploading translations. The tool is open source and available in
  package management of Ubuntu for example.
  Hence a configuration file for the tool was added to the WoT
  repository. It can be found in the ".tx" directory where tx expects
  it.

  To use the tool, it is recommended to use the "transifex-pull" script
  from our scripts repository: https://github.com/freenet/scripts
  Please make sure to first read the manual at the beginning of the
  tool's Python source code.

- 0006557: [Code quality] Ant: Builder silently won't run unit tests if
           there is no JUnit installed, should instead abort with error
           message (xor)

  When compiling WoT with the standard command line "ant", it will not
  only compile, but also by default run the unit tests.
  As new developers typically have different machines than the existing
  ones, this gives us a good feedback on whether the tests succeed in
  different environments.

  Unfortunately, new developers are also likely to forget installing
  JUnit 4 and Hamcrest, which are the requirement for the tests.

  If the dependencies were not found, the old code just didn't run the
  unit tests then, there was no error message - a rather severe
  breakage :(
  It will abort the whole compilation now.
  Thus, if you want to ensure good testing of WoT, please consider
  checking whether the unit tests do run now.

  If you want to skip the tests, use "ant -Dtest.skip=true".

- 0006588: [Code quality] Unit tests: Check
           WebOfTrust.verifyDatabaseIntegrity() when finished (xor)

  This is a test which checks whether the contents of the database
  match the database schema.
  It verifies not only structural integrity, but also semantic
  correctness. This can be things such as "is the modification date of
  this Identity *before* the creation date?".
  The test is implemented by calling the startupDatabaseIntegrityTest()
  functions on all objects which extend class Persistent. See those
  functions for what is tested.

  By calling the database integrity test from the base-classes for all
  unit tests, it is now run at the end of every unit test - even those
  which are not related to the database schema at first glance.
  This should ensure quite a bit of general shotgun testing.

  That's a necessary insurance due to the general complexity of
  enforcing a database schema in db4o, which does not have any schema
  checks of its own: The only thing which ensures the schema is obeyed
  is WoT code, so it's easy for new developers to cause damage.

- 0006686: [Code quality] Unit tests: Check
           WebOfTrust.verifyAndCorrectStoredScores() when finished (xor)

  One of the main jobs of WoT is to accumulate the trust ratings which
  identities give to each other.
  For identities which have not received a direct trust rating of the
  user, it  will use the trust values of remote peers to calculate a
  Score value. The Score is a weighted average which acts as a
  replacement for missing direct trust ratings of the user.
  Thus, Scores are the central "output" of WoT, and their correctness is
  very important.

  The function verifyAndCorrectStoredScores() validates the correctness
  of the whole Score database using the reference algorithm.
  By calling this function from the base-classes of all unit tests, it
  is now run at the end of every test.
  As the reference implementation is not used in practice, but was
  replaced by a faster algorithm in build0018, this kind of shotgun
  testing ensures that the optimized algorithm works properly.

- 0006682: [Code quality] Unit tests: Check WebOfTrust.isTerminated()
           when finished (xor)

  WoT has many different subsystems which run on a thread of their own.
  During shutdown, hypothetical threading issues such as deadlocks could
  prevent shutdown of some subsystems.
  This would be difficult to notice by the user: To make sure that
  terminating Freenet is always possible, shutting down WoT may not
  abort with an error message.

  So to ensure shutdown works properly, code was added to the
  base-classes of all unit tests. At the end of every test, it will
  check whether the subsystems reported successful sutdown.

- 0006594: [Bugs] Invalid usage of HashMap/*Set with objects of
           subtypes of Persistent (xor)

  Child classes of Persistent, such as Identity / Trust / Score,
  typically have a hashCode() and equals() function, so they are
  eligible for being used with hash tables.
  However, there is a pitfall: The equals() function does not only
  compare whether the entity behind the object is the same. It also
  compares the current state of the object.
  For example, an Identity objects represents the entity of a single
  person. This person is always the same. But the state of an Identity
  object also includes things such as the list of WoT applications the
  identity uses. These things may change over time.
  Hence, equals() may return false if it is used to compare multiple
  different versions of the same identity.
  The consequence of that is that code which uses HashSets together with
  multiple versions of identities will cause multiple entries in the
  HashSets when there should only be one.
  The same applies to class HashMap when objects of class Persistent are
  used as key, their ID should be used instead.

  To fix this, class IdentifierHashSet was implemented. This class only
  considers the ID of the objects for determining equality.
  All code which uses HashSet was reviewed and fixed to use the new
  class instead where necessary.
  The code which uses class HashMap was reviewed to use the ID of
  Persistent objects as key where necessary.

  FIXME: The actual code for this is not finished and merged yet!

- 0006797: [Bugs] IntroductionClient etc. use HashSet<> on stuff which might not be safe for it (xor)
- 0006671: [Code quality] XMLTransformer: Log parsing failures as warning instead of normal so developers notice them (xor)
- 0006814: [Code quality] Identity.setNickname(): Provide more descriptive Exception message if given nickname is null (xor)


Thanks to:
  - Person1
  - Person2


Links:
  [1] https://bugs.freenetproject.org/view.php?id=3816
